(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    362853,       7281]
NotebookOptionsPosition[    358066,       7192]
NotebookOutlinePosition[    358438,       7208]
CellTagsIndexPosition[    358395,       7205]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["1. The range n>2", "Subsection",
 CellChangeTimes->{{3.905211493070997*^9, 3.905211497121928*^9}, {
  3.90522480304529*^9, 
  3.905224804638667*^9}},ExpressionUUID->"bdb0df7f-7ae9-4dbb-a48f-\
9f7d4597539e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n2", "=", "3"}], ";", 
  RowBox[{"\[Beta]", "=", 
   RowBox[{"-", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["12", 
            RowBox[{"n", "-", "1"}]], "\[Gamma]", 
           RowBox[{"(", 
            RowBox[{"n", "-", "2"}], ")"}]}]], ")"}], 
        FractionBox["1", 
         RowBox[{"1", "-", "n"}]]], "<", " ", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"24", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Beta]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"n", "\[Rule]", "n2"}], "}"}]}], ",", "\[Gamma]"}], "]"}], "//",
    "N"}]}]], "Input",
 CellChangeTimes->{{3.905213503455861*^9, 3.9052136000012193`*^9}, {
  3.9052402620322537`*^9, 3.905240267601536*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"6a4857c3-82c5-4a46-bb8f-36623575b93d"],

Cell[BoxData[
 RowBox[{"0.`", "<", "\[Gamma]", "<", "1.111111111111111`*^-9"}]], "Output",
 CellChangeTimes->{{3.9052135052798033`*^9, 3.905213607522306*^9}, {
  3.905240265276968*^9, 3.905240267937014*^9}},
 CellLabel->
  "Out[295]=",ExpressionUUID->"183e0004-a21e-458c-a80e-73de94ce4062"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EQ", "[", 
    RowBox[{
    "\[Gamma]_", ",", "\[Beta]_", ",", "n_", ",", "x0_", ",", "y0_", ",", 
     "z0_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q2", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"B", "[", "\[Tau]", "]"}], "2"], 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"324", " ", "\[Beta]", " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", 
                RowBox[{"1", "+", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"9", "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"18", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"16", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                   ")"}]}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}]}]}], ")"}], " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{"432", " ", "\[Beta]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"1", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"288", " ", "\[Beta]"}], "+", 
                RowBox[{"288", " ", "\[Beta]", " ", 
                 RowBox[{"Q", "[", "\[Tau]", "]"}]}], "+", 
                RowBox[{"72", " ", "\[Beta]", " ", 
                 SuperscriptBox[
                  RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["6", "n"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
                 "\[Gamma]", " ", 
                 SuperscriptBox[
                  RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"2", "+", 
                    RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                    RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], "n"]}]}], 
               ")"}]}], ")"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"Q", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{"Q2", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"-", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";", 
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[Beta]1", "2"], "12"], "//", 
    "N"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n3", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n3"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n3", ",", "0.00032", ",", "0.015", 
       ",", 
       RowBox[{"-", "0.3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n3", ",", "0.00031", ",", "0.025", 
       ",", 
       RowBox[{"-", "0.35"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{"\[Gamma]1", ",", "\[Beta]1", ",", "n3", ",", "0.00035", ",", 
       RowBox[{"-", "0.015"}], ",", 
       RowBox[{"-", "0.4"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
     RowBox[{"Flatten", "[", "ans3", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"graphxyz1", "=", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<B\>\"", ",", "\"\<Q\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Blue"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Green"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Red"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.75", ",", "0.75"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Bold", ",", "14"}], "]"}]}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", ".015", ",", ".0075", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Arrow", "[", "x", "]"}]}], 
     "}"}]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9052116618906984`*^9, 3.9052116761896844`*^9}, 
   3.90521170678782*^9, {3.905211747489483*^9, 3.9052117503744717`*^9}, {
   3.9052118984657445`*^9, 3.905211937650361*^9}, 3.905211971122901*^9, {
   3.9052120150061207`*^9, 3.905212026003426*^9}, {3.9052120603279*^9, 
   3.9052121045378623`*^9}, {3.9052121668373423`*^9, 
   3.9052124509690065`*^9}, {3.9052213514857445`*^9, 
   3.9052213818457627`*^9}, {3.905221460893532*^9, 3.9052214716152086`*^9}, {
   3.905222797119898*^9, 3.9052229006858497`*^9}, {3.905231011870759*^9, 
   3.9052310127924166`*^9}, {3.905238555069356*^9, 3.9052386233251557`*^9}, {
   3.9052387195699987`*^9, 3.905238748541589*^9}, {3.9052405078541346`*^9, 
   3.9052405130832033`*^9}, 3.9148041279489613`*^9, 3.914804165753169*^9, {
   3.9148042761904497`*^9, 3.9148042783568916`*^9}, {3.914804336512536*^9, 
   3.9148043391120367`*^9}, {3.9148044358947*^9, 3.914804462186309*^9}, {
   3.9148045060378957`*^9, 3.914804524758395*^9}, {3.914804600815051*^9, 
   3.9148046045830297`*^9}, 3.914806207760448*^9, {3.9148735281412935`*^9, 
   3.9148735662815742`*^9}, {3.914923803601058*^9, 3.9149238082584686`*^9}, {
   3.916281922839538*^9, 3.9162819236922884`*^9}, {3.9162819676124926`*^9, 
   3.916281968364569*^9}},ExpressionUUID->"14050313-6540-47a6-8752-\
4fe077503869"],

Cell[BoxData["8.333333333333334`*^-10"], "Output",
 CellChangeTimes->{{3.905211677352333*^9, 3.905211707368737*^9}, 
   3.9052117512228*^9, {3.9052118992668715`*^9, 3.9052119381374717`*^9}, 
   3.905212027229601*^9, {3.9052120637519674`*^9, 3.9052121053230133`*^9}, {
   3.9052121678747005`*^9, 3.905212451424664*^9}, {3.90522135218008*^9, 
   3.905221382504965*^9}, {3.9052214615054655`*^9, 3.9052214720364127`*^9}, {
   3.9052227977596498`*^9, 3.905222835866399*^9}, {3.9052228838710847`*^9, 
   3.905222901483349*^9}, 3.905231013292303*^9, {3.905238586094929*^9, 
   3.905238623635607*^9}, 3.9052387517339735`*^9, {3.905240509537033*^9, 
   3.90524051345525*^9}, {3.9148043305495214`*^9, 3.914804339740788*^9}, {
   3.914804451261105*^9, 3.914804462689912*^9}, 3.9148045260785427`*^9, 
   3.914804608161297*^9, 3.914806209609686*^9, {3.91487353104154*^9, 
   3.914873568314966*^9}, 3.9149240476966743`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"74d2bf39-aa62-4b29-b4ed-2c301e971213"],

Cell[BoxData["0.00034641016151377546`"], "Output",
 CellChangeTimes->{{3.905211677352333*^9, 3.905211707368737*^9}, 
   3.9052117512228*^9, {3.9052118992668715`*^9, 3.9052119381374717`*^9}, 
   3.905212027229601*^9, {3.9052120637519674`*^9, 3.9052121053230133`*^9}, {
   3.9052121678747005`*^9, 3.905212451424664*^9}, {3.90522135218008*^9, 
   3.905221382504965*^9}, {3.9052214615054655`*^9, 3.9052214720364127`*^9}, {
   3.9052227977596498`*^9, 3.905222835866399*^9}, {3.9052228838710847`*^9, 
   3.905222901483349*^9}, 3.905231013292303*^9, {3.905238586094929*^9, 
   3.905238623635607*^9}, 3.9052387517339735`*^9, {3.905240509537033*^9, 
   3.90524051345525*^9}, {3.9148043305495214`*^9, 3.914804339740788*^9}, {
   3.914804451261105*^9, 3.914804462689912*^9}, 3.9148045260785427`*^9, 
   3.914804608161297*^9, 3.914806209609686*^9, {3.91487353104154*^9, 
   3.914873568314966*^9}, 3.914924047699704*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4a2dea4e-98ba-4e64-876a-c302e2f0065d"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.0035], 
       {Arrowheads[{0, 0.015, 0.0075, 0}], Arrow3DBox[CompressedData["
1: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
         "]]}},
      Annotation[#, "Charting`Private`Tag$1204#1"]& ], 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.015, 0.0075, 0}], Arrow3DBox[CompressedData["
1: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
cXIO7sdFrl7e/LaDyOs6xU3fNUt+gTuj7TF7R1IbkUXZvRd9WiI/xT0qOOO5
nVgL0dtt28696nSUJ7j/bKNyCig0ETljekdGL9JTsnCX9+fbLeXeSPxE4iLN
BzNQMnHnyPrz1F2/nti/j0+3AzFSMv53rrgXMeU1VcSrRmqibN8Z18fntal5
cUgiYuImAe2yT/SU57hvEasZTh16TfxzWOLHmxvz6+e6JzOWu2z6khjpczI0
kbGdnIv7k4WUb0pCZ8n0h6SoFWPP18dfmZF/u2h+h/y2ROqJaVzWup/sK3bx
UnhM7qazTVlbfrzug7O33oXNPSZLP+yI6zvzcN3pfIscrWvTyPlSkXmV91LX
XXnQSs5P+Q7ZKb4zwsbl5rp/8Uly2yB2g5ytNHVqo2fiui9/O3HzHJs/OS+R
x8NG9Pq6F5bvvflEx5Sorlspeis9bN03mNgxeBPOEnktzi8fZ3Jdd6505vok
aE2Ml7JiVYPmxP+5d5aKrqcZJPbYLTyWZz+/7o+02J73u6qSe7QezFSYBqy7
zFqKRYTTMbIAU79Zve3/+7enVsCj3pxcYTHOXvLRh/i/OK9elLuZpneSLOQW
rNob7bHuN886fD2nZk92PG1dTe/psO7Hc7M4yx3OkMUSmaL0Eo6tu+qq9bvo
cBfygSnHPdH0autu+I5ZZ0bWg7x44LzY03nNda8VT4xXLPUiR9dfvttyXXfd
315QWxFj8iZLDWSnsfcbrPt4wcPQwvue5O0ikRGtLwzXfanzgvmtVDcyd/ON
SU/3/x+/57T5ObUUZ7LHt+t/lMv+f/4xzpxr3T62ZJFw+peJflrrfj0/b4Z8
xIwcqBAuytekvu66eaifJegY+Xpk2df6HEj8P3ijzLk=
         "]]}},
      Annotation[#, "Charting`Private`Tag$1204#2"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.015, 0.0075, 0}], Arrow3DBox[CompressedData["
1:eJxF1nk8VN/7AHBblC1bspXsiYQyI82dY08iW4nsa0myZUkiSwvZyZp9DRUi
28wcIaREaCGyFZHsu/C782m+/f6Zeb3er/s657nPeZ7nHiFbV0MHGioqKmb0
hxb91/n9NY1+DgNcPlnVx9dEQaM1F8sHKX2wnT42nn4JAzwNZ3c5mCbC1e+i
x4h9H+G4VGqX/ToG1FEjWnM6j6HLofh76ze7YcTF0e3pHQwQkF1tmCvKgsZx
iY62w+8hN7WqqBsDFrA4RqrxNOTAUiAppnf5DVR18Fhv2osFLXjT8zneeRAR
2jrjcrMZ6nscsmnkwYKO2qUA8U/5cPuVxKTGngaYfCd9SUsYC9iiRj+rTxRA
y5IEz+F9NZB33TdVURoLItdDHVrKC6HEkrZQyUQZdOm6etwLgwVpd/alvcQV
wQ0HPQnmqTwYXXLG8IcyFogcttp/M6oIHvkZUrC/Mg5GzglsuJ/Fgs8fhWkG
S4vg+VBxH/yoFVj/EGhHb4wFiinug0fTi6BDm1en880E8ENcqyfaGgt8GnfV
A/simNmgUP/YJwfMTJIct65iAXxiqnWbvgjGRHSLyLU8ARl5U3PACwsynEg+
8/cLoazjfQGHg2Vg50Xe5zOBWGAwU/1Jf7oA7vIYOLC4UgHuw7Yl1jAsMLXf
l0uNLYAJY+b2Ml5VQJkt1S80Dgu8jXlGhJ3R/Az4iLzOqgaegPjULA8Lijvo
JxdTc+GzMcnDfvz1gIX/cd7TUixYYdpxrEjLgREbkQ+HvAlg54i/fUwlFiRY
JigxxmTDs91K9nrJRLCDYwtdbMQCHEngrGB1Bgyr0A3IVIYgtSP6sfMbLOCO
eWBQe+0xfLvrt49MFwTp2xyddp1YUOg+JsfOkwpPYpN/pvE3gOi317r7erFA
sPn4XS5CEjyo6c+UgWsAtv48f972YcGxAqFVL7NHkHhxkqZepwEUZz9XPPkN
C+IxtDJla3HwW46epqtuAziQlMAgNIoFEaJMbgyJMZC206d8v3ID4Koycg75
gQXq8ccLDzpHwGNKIQeXxRrA04WWz9Y/saCS+/Yt24r7UN5JXFuWqgE4L5zC
1U1hAU+RQZH+rhA41WpY8DwTAsm2sqGYaSxItI2vUHrvD3/WzCV1SkFQ5+t3
c/w3FixuKnbpVnnC/VZBPx4UkABdUDgdcQYLknONpy3CHeD7N13699lJoCHe
bZB7FgsIoUEGbVzKkIOzrEXnOhH42oglr6DPx9sbu5xWvASIM/lAjUQAMT/W
9luhnropPD36wQX0T93dLqchgF0stW5G6L6TMlcu+zD6AJPcndJ2XD0wtB9Y
+PQL7RdjD1zAbAD4tuAVketSB0gYB77fk1gw7qlHStIOAXEutcn4xFoQOBwl
OPwdC96H0H9yiAgHmPMNa+bd1cAl2Kq6eQQL2n+GzqqsR4Lx752VdydeAmbC
Z/uzaP59wh1qD2XHgBxa9tH61SqgutWYrvcJC57SmMpOVMSDcuZV8Q2mSnD3
ZXrJxw9YgOEup3os+AhISNz0xLC/ANfVxltYO7DgE+xUwd5MBPvwJ17MclaA
3njJmhK0rt5lBcbeXUgG6TZr7r2cZeCd72kT5hIseHhvgf3U5mOw94VywxJn
ETh42c+mAK3nzKxfYdnv0sGLBY2LLXsLAKaVBLkzsGDh+IeE3PAM8CmhLuYK
Sx4IPMz27mEMFohlNCktvssEy4wOzXTsWaC9fZ06Be2j5bhXaW2Hs4CDw7LT
Z9nHYDx3PTMyGAtSDgiyVdpkAQP/EynbWsmAzS3IC7mBBcft4hz6qrOAXRSd
FnVaDNhyUrpufw0L+h54jDl9zgJ0OiCojDUM8B/Pqguyx4L7Ai5sidNZwCz7
bjMdUxCobbWTTzXHgoGYjKCE1SzAB1a17C08QHDk2fCK81jwJ0vlTdZaFih7
psF+9vNp8PKqh3GnDhY0LVc1bsxmgdBPxY+aOa9AXUZu2mV1LNAf8DGcGMwC
ppHFkdef+EFPGdo+CQQL5BapA543ZgEP1uFtruuhUD/t/JKzAhacdVM3zM7I
Anfb76Wp6z6Es60Xzr4+igVjTmZtrB5ZYPSEVLD6agycf72RgxXHgkHS3pZz
SBZoKQNf+SQSIPwoEe+1HwuUz9w6d/VmJqhIFcRrHEiFV46pODzfxIDbN3Pn
t3seg2dPrHWY+HNgye/8zSPLGKDpKip0j+UxgNGSJRclc+HzwfLVTzMYYGkW
ECyBpIFT6i8D7YXyIL6fZr51FAPOiU02mQSnAFyY9KpMRz7skzXUYxvEgOb5
lGJSSjJooR6es71TAKvj7D9Gf8YAs6brAz+LkwC2PjVJU6AQZrttNCl2YMC+
zxu7TpEegYjaF2dPshbBomXvEbs2DPC/raWNbUwA1Fz749PQOX3n/VLEmyYM
GM1vZMxoigfauCMVxnlFUOcXlfBViAFhQtwJ+k1xwOtFVlxfRxGUE6hu1ajH
AJ89mdeONMaCWBaf1OcjRZDFxtDbvBoDYs8JF1G9igE8nLFr/sNF8BTybePp
Cww4hnfmUQuKBtRW9Op/2otgzXn+xZNlGPDKLF0pPyQS5FYKR+5kF8HZP7G9
O6UYEHU47XJ2+EPwXmMh2dmxCPLxPfy9/QQDGIcmHmUkhYGC0w4ZGN4iuIiL
cMAUYkCAgbXrTMl9YKMrxuVYXwh/TrRc1c7BABP3CUPH2RBgf+vDS5XuAjiR
wJ8nmoUBGL+zJ1sOBYOtfeU10mcKoNM3x2T5DAxoCtvp+WFxB6xICrstvciH
hM/RU2OpGDDQfzmycusmyGWYP9zslAdbs89Kh6ag7+Wo136pzRsEff+jcag6
F/YfSVgxSMaAvbxlOTfLPEHQDEn+z58cyCFy/5RrIgboyD/tsqlzBpcDIuxL
vLOh7rsDwvWPMGDeu16kTtMRXDmqOZlfmgWvD2W7HkU9uSiGxp7LBnyS9Ens
I2XC9i73080JGLAgyluur2UCMhbFbZcEM2DPd5k3t1Efq4435ejXBWtX34T7
BjyGFlSVHCao4/S0rtywUARt/L+WDg+kwsWhGRUD1M9YuKX4tgjBw0uctM+U
UuDR65e8L6O+Mek2K7RbHd7TkhZPTEuCnEafe5JRn+Jii75/1gCqzSrsnKNK
hAqx0UFjqJ9PKjbOZDOBJs2sjfJXEyCtkdJzDTR+J4tddjoXLOEE90lF7/44
GIvXdDqD5iFz3WVE94U9lAuxqKHNj4ZraZa3J1C/7cGyaSpwGTbIsRs51UTA
rO3bIolJGKDruJWYpu0EQ8078nDDYfD2pEjpQTT/bFjltOita7DjFOviS49Q
uCod6LmM+mKAf9Hvu9fh2Fpudt5QECwO4Er+hJ7jW7whfWe/KyxnaskXfxsA
affYX6h4jMZvxu/Ku+4Guc56mHkEeME+evXSlHQMeN7Q6hpm7A5Ht8Oyia7u
UCFZ0/suWieODtaj3NnukDWj3gY55AzzC5XhjUwM+DC5azi7zx2OrZifS4V2
UKVNLdERrTdu0eE3jNQe0LRBmrPzlikc2a4XuJSNAcx2fjHyPB7QhWvY9K2z
FqQllgecQ+v2W8N1hnVBD9hQHpv2fmAJT9PgO6OaiwG/m/e/QHg9oPGuogur
qlrgVl5+BSYPA4TnX6YM0HlAjXgrFTPMRYCdMOKWzMeAkTTtoLIxd2jYHr4g
324NZm84ufMWYADPmtDB2JfusC++xvJkpgNQ5Rx6No/2kfWuDYZXp9xhWtOJ
VHbV66CgSs33SxEGXNivsVYy6wYdM6hGOve4g0x1VeZ6tB91Gb6Nfk51g69G
X+WYvvEAUkOp3e4lGKAiAPWmX7hC8ZggdqkPXkAztlBZA+1rmLMs+PLbdRi3
KbDcw+8D+m4e+83xFO134pOMji0XeFyPI3VNxRecHukfTHuG3p9b8zFyB69B
m5zAJ31ifgCvIVVg/BztU9qMNVphZ7iEC/XEjvuBRwmtLxjRecKmtxvKC16F
b5by4/Tv3wLPNlypLcsx4Nk1r1lRxitwb4u8poC7P1jcz0u3hboWbWEJ44Yj
LKKj9w0l+INJX6auhAoMkDtVUxE34QBFjqdqccz4g17mQjMxdI5tDBHe5PfY
w2wVMUYBhtugXEow8xnqA3eEhw6j550lR8u+uvs2UPTpTpCtxIBpl5qMP8W2
kJ7wkWltyR+Q2IhqJahLV6z++JFkA/WbRbWc3/kDnQyD6oNV6Dxv/n0t4541
RJjZDibH+IMzdOKb4agXNMrLw1lLmHiXHr5W9Qf+THuF5lCP4H87nf/FHEaP
6IQe/34LZENDtXMvMSB1Quf0vjeXYOWh2185vW+BEzrZk8uoCx9oPb37tTF8
qfiye8bVD0RaNT0F6Nwu3LXXLKL7PPSnYz6K6b8JZCZJs8Goh6fp9kf+MoSs
UYv40JM3wZG54w9XUJ8OTTL2u3cOktSeGgd/9QHFI2qIRA0GGHcksFynPwuF
a+RmsId8gBVRgd8Qdbl5I7HanNMQb9K0wGDpDXACJwWSUA9hT7LWO6ECz/WU
Ha1tuwE6l68XlKPOYXe3gtYYB3f1eKmdX/UEm2c0JFpRZ/vCwKgfjIGP+fac
ixX2BNkcgr2fUa9bvtDkPyMLO8qs3ZGzHuDQWOHYGOptMZcvcGAkIH1bSSSH
hzu4GhAZ8Qt1woGsjkIhPni0qiK+LckNsI7U7ppF3cT43b1Kt03S5a/X56X9
XMHAbe97M6jHRH7N+NhGD4SL33Eir11AcWm6xhTqDbxUXc7ZAiA6+sfcBPs1
4Mqzy28U9eNCAU0c18UB588RbyObq+DD6dBL5DjL38ubLzHKAIePoSH5lVcA
yazrwBvUP35iGlZMkAc8Rq2RM8yXwaeVJ2vVqLPome7Hf1cAJ18kxzA5OwDI
qCiYR36ePZkYuaIIJA23aLo77cCBsOzXkahvWFsSpN6dAqcj1s3242yBaqWL
9SXU9VuNpwdtlUGyvoVvlLklcK4//hJBvb2CUw7xVgHn2tcf9101A8mmd/QF
UU/Y+KX820UVvJSkc7kYaQK6nhJYv6HnflJ6b6sqizrQphJ1PslpBN6zFp4i
oK7X3UDwfaEOnun6Vcje1QeM7IGXU1AXVPOsx6hqAPXgfb35/DogYzyxxgt1
iVzfZKM6DSAg//uomdlpoN0LLhigrpHzHBQIaAJjuPvI43ZVcDaR01Ya9cnZ
VROWq5ogaWhqLbwXB94oK+3Qox5RRvvENVcTJFI3+jp6nQBm3uI6I2idcws8
033xRhNQx33oaps7DFL6tK/Uo+58tdueNKgJspyaPW76coJvwTsej1CXn2y7
5TOsCX6el1Jqb6GBSmHeD1xRf/JtZLi1WxOscTHekzAVhvxt+FdnUO+gmUt/
VKUJQg8O426dOgYH7V4oiKJ+IzFt5nWYJvDsjiDsfqoA++8c295G+/RGfwQr
Xl8TPHpqQyVhdgpWvk2V70ed6QG74dgeTdDO1rbhel4ZTj+lk45D3aqj3OjI
JQ3gxSTDEMqlAVk393C5oj6mXTx6a0EdsPgEWl4+dhqKDmmU6aDevrwHaxOk
Dl6m9Ow5d+AMDBBcVGdEXVhVn+/kPTVQMTWOn/XSgV2vfhpNofOHbe6CxfMt
VVCSa8lAM6YLz4z+0HqLeofDXa/u66rA7eXSlwcSenBm8T1LDOrYd8eo2VVU
gIN8pdSPdH1471vnvCfq7UZqAXm5ykA+/7juJr0BzJ0cHjJB3bUkUv8VjTJ4
+3W/q6GlAcz5JfUVj3oG70b4OhEPaFxXTLPzDODXnt5xMdQXTAVHP7kj4LSn
CENGvwEsjN3ZxYr6ctD992rCOLB7a8F1m8oQWnF1nVpF5+3rTRlfpy4lUHmo
NtKXxxBeMLn8cAR1J/f9C263TwKznk33RiFDSO11ZOUd6sDDnubaEUXQus3c
n3jAECaFnfarRV18IMRP4QsGlFRN/X7GbAhr5DL2FaJutBComXVfAdSYyVm9
mjWANHtYWx6h3rdqaxh48gRIP397KLTVAHKWeIfdJc//Y9jw/Bl5sJvO+VBZ
ggEMf1Ft4Y160CB9/49COVDckdizftEAbuE0la+gfkhmmZbZURasaPHk8HCg
efv0lV8PdfMDrr2541LgcZ7JvRAXfXjLMWWPOuoFPVyuE/ckgVnO2G9eNn3Y
fubN7EnUF7klj0orSAAGTvhe3UQPDkX9iDpMjofxyUUIhcH+NMvEUwW68BtT
nBkb6h76VH4pqvuAfG9N56P+M/C59TFjZtQbbnI9kohiB2aH2VwvftGCyyCC
fQ/q/e97Rsp2mED0KPUWZ/dp2M749S496nzB3A4fZXeB2sbPTB/aNKGbcW8x
Heoxoef0+K238PZWV4YuEzXg+pieLy3qX4abZ0c25vAqjiGruWXqsCBfbJwG
9Z9ncl5VtfXir0iudevnqkFC5NFpshdXVhfqTnwm/d54NHcyURUGRIFg8jp4
Mcf++QdzpD5p6c4j4SqQqC6dRd7XsICH9eCtDVLBK4v86UBlOMfUiZDjZJvw
Khz+SQ0xS0LPTs/h4cIuG6PdqK+vM/LGnKaH43t+rT8bx0ElgmgfIzmfTJWn
4CVG+Hju1if+70oQX2PeyoI6S7rpbLQIK4zrPTmdOqkIfULOcrOT4+Re2BP3
gQ3Sj4aNKa5h4L1x72oe1KsQP4fKH5yw5NAxxtETx+G1T8OXDqB+thbRELm4
D3IRc1byETnoeV9RVxj1w0m5dXrZ3JBP9gvS9UQG/twt+kca9cyEAa+GZh7o
7WS6L9NOAgY98yiURz3l4M2MG1m8MDXv52zXvAiU2fM5UBF1U9+J5B+mfJAm
mu3NpZxDsPV7YBq5flI0ghbuOvND/ymD/qU+Lnj5V2mXNurPJgaM/Vr4YUxE
bts+IVZ4fFZ8vwHq6SHjnJ10AjAA8+3NnkO00NjM6cpF1NfaLZ22JARgy52R
hkS7eVJxdjzJAvXY4+vN3nIC8LB5PHZ3YiP+kocClz3qM82GzCXCArB0JWag
ZGwJD1sm7a6S4+ydm2Pa4oc8I/RDrIdpwZGipiI31HXrqWKYG/khfcfaOS1d
JrAtKPKN3Ee+1/i/83vywxN+QkMR7uwgsiJqxx/1S3VAuoCdH55DCvVzlrmA
meHhPSGoC/8sWWbK5IPCJOManhM8YIdKoyUK9YvPTJf6H/LCT3RVfU4/DoCD
dww8E1C/sU/u6+RvHiiRVpBcdPQQ2EQCNlNQH6S//eOQOg9UrcAydmoJAQMr
h/g81AVb9aiXP3BDg2bpBRsREeDK8SvjCeqlZuyps0zc8AgtLW3zdxEAQ3lu
k++HkTdD89/j90ElE7U/IFwU7PR5SL9A/fz7CIsiZy5oPy4t8ZNLDBy0bSip
Rn3euS7zXjwntHhwdKf3rhjIZPizXo/6OQug4FTNARcJCe9FvomBh/esuBtQ
79XidlT7wg7DrEZHVw6KA7V2Q6pm1I+H2z3YXmGD7QalAp5nxEF3gm91K+oT
+jNW3lxscFy+Rh1aioOQsrRTb8l5LvXj3LBlhXdUdjpprMWBD5YY8R514kuc
39N0Zrgl/XzS/pw4UEqlKvmA+jWnpXf+/YzwratLO5OUOHgRWJfYS56fdp6P
XvHtgSUnj7Pyr4qBW4IG+p/Jc+nTR5EOKwYYK0f17uULMRCcYPulD/Wd5fcT
b4t3wSW34qQ/NmLgQ7vJxW+o52Cog3KMaWCwEYzoTBIFoepzesOoW/vjtnxr
qWB3rQhtkJAo+BJxl28U9UY/f2crnW1SJQbyi2aLAJXA8iM/UPeqVflEAmsk
Wf9ma6F7wkBB97PHOOoM1Sx+wubLJJVt3KjlbyHw3ZcjbgL18AmC35nYBRKB
Q2Tb4pwQ4Oy+bzaJep27oC9f/BQp7HJd9jHqQ6Di89vdU+Q4U3qRZ2k/SGNv
gwNOPDkIYrL448nOzxvhp/t1mJRZ53hUTPsAECve2iT7CZtYJ4mCL6SY7083
msb5wU4Qq8Yv1GXe8ywqMnSRDH9kaIbe4QMzT0UDyH6npFopOcqSdBxzOsy+
bD8QWBA9S/a2jRvG03Tv8Epp9jl5Y1xgyEKYhey38tYDqZ168a821O9eDeIE
rmCohryvr6BbNLN1P35zckP6uAgHCOx53UN+LxNzZoO3waN4+0aqOjjNCvQJ
uzXJDqzePsn8+h2fSMgTYjZiRvtWsugneX3egwaAagJvqU2K22ndA3bX5auQ
8/a1hjt5X8UU3mmPT5r/KB14+MAsjJznA2kZNhWHp/HXhX5Jd5TTgF2kr63k
c9FzyjK29v6Nl8QYSffEUoE8Gu2j31H3C+zXV3s8i1eVU4swYl7HC588YDxG
/v4eoSEknJrDW9N8CSrFLONzp9Nuks99X1giJ0iaw+9SEVKQvjeP13a5XEmu
EwEzXNJv/nk8vTW/7j7ZH/iSiIcdQ+TvSBg/l53mPN7E6AbuxfVBvDvDt+/k
epOpPyP202YeP73t/+MS3wf86hrn5iA5b4i7sILrPF5gKdHeJKIKn+g/ykb2
UnOcHQ3qdD/n41IHXpJKnm6LD6Bu5nAB7Ladx594er7L8UQXKarwAP4r6px5
jqw7WvP4xLGOH1Vc/aSa4TnjftQ/ZSaoF4rO4w8IEG8Zl46Qpj5QeZD7Qota
50Pd8hyeW9LGQp16nNSd2hz9hTx/PJJCJwhzeLGbjLF2jFOkL5delJH7S1+R
V+arHzk/B/Yutv0mDSMzWx9RP1gbq55eP4s3f0fv+FxhgfTW7bAU2e9kKNBd
3D2Ld3RLuDZStEja//68Bbl/hYo+RLFrzeCt31XWx6wvkViqHn7oRv0M9WSt
Sv40nqB09ssl7CqJP4Obi+xy1cc+M77+ha/YHq68Jr5G6oSJ5uT5IGYrlhM0
MIXfSSR2/lpZI1UquVN1oR6WcnDs0OpPvIL+UXEF5Q3SoLqQeSfqvMLXy73+
TOAvpJtYIPUbpOiJ6yTy/MlN61Gv2hrHK/w+lsAqsEnKyb4mQXbHK8+SWzZ/
4CPY2Gne2m2SFualkzrI380pi6KY1e94ti+m3xLiN0kmFxtZyB4VquK6MT+G
9+G6Yh1VuklSLsI/JN8P95dYlv/6NYr/XjU7NfB8k7T9JXcv2VUmQjcVx0fw
NsXxp2szNklhnWOp5DmpM2N+5sHIMP5HoI7iab9NUverWWmyF0iLZC4ThvDh
f9Jd8tU2Se9/1LxuR/3H1bS7dvWDeJdxpuSFzQ1SfuppJrJX2+69N9behzfg
04nqRTZIsHP26hvy/co1ratr4yPe2shdv0lrncQtWjXWhjohTf7gHcNuPIxq
KseJrZGeuXreIPuJ+t6yG2Ud+BqngsrrX1dImx9G+cnucmNTXF64Fc+fdNGS
zXOZVEbjGkie/3bTH+GJiHt4cRktR12DGZJz6WIP2Quz3seq+9eS7IX5YjMr
Rkg0y1Oq5HXUN18mPnN6RUrO9z9ZJ/iZZCuE6SD7z/1GXu2KzaTvzK/C35S3
keQPxvCQ45fLFWOJon1NMjfYyZC6QCLZb/1xIDvS0/nlu9trkhI3Ta6wWDFJ
dNGokuwqpMdBHx+8Jrk9pOpxHg7GP/saSEPOD2Rbsm678JrE5J+j+ICqDO9v
zZlKdj7xuC822GbSNLd5I/XuJnzV0zPi5PzvXQODh0wbSR14rXVGQjuez1wg
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
oLtr
         "]]}},
      Annotation[#, "Charting`Private`Tag$1204#3"]& ]}, {}}, 
   {GrayLevel[0], PointSize[0.025], 
    Point3DBox[{0.00034641016151377546`, 0, 0}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"B\"", TraditionalForm], 
    FormBox["\"Q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"", TraditionalForm]},
  BoxRatios->{0.75, 0.75, 0.75},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{354.2863425065933, 311.8724113757702},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    RGBColor[0, 0, 1], Bold, 14],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.3107807878673687`, 1.7336445492541281`, 2.5935169756528005`},
  ViewVertical->{-0.9713697966536037, 0.1681851448097871, 
   0.1677929534111834}]], "Output",
 CellChangeTimes->{{3.905211677352333*^9, 3.905211707368737*^9}, 
   3.9052117512228*^9, {3.9052118992668715`*^9, 3.9052119381374717`*^9}, 
   3.905212027229601*^9, {3.9052120637519674`*^9, 3.9052121053230133`*^9}, {
   3.9052121678747005`*^9, 3.905212451424664*^9}, {3.90522135218008*^9, 
   3.905221382504965*^9}, {3.9052214615054655`*^9, 3.9052214720364127`*^9}, {
   3.9052227977596498`*^9, 3.905222835866399*^9}, {3.9052228838710847`*^9, 
   3.905222901483349*^9}, 3.905231013292303*^9, {3.905238586094929*^9, 
   3.905238623635607*^9}, 3.9052387517339735`*^9, {3.905240509537033*^9, 
   3.90524051345525*^9}, {3.9148043305495214`*^9, 3.914804339740788*^9}, {
   3.914804451261105*^9, 3.914804462689912*^9}, 3.9148045260785427`*^9, 
   3.914804608161297*^9, 3.914806209609686*^9, {3.91487353104154*^9, 
   3.914873568314966*^9}, 3.9149240484375086`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3c3f5b94-c906-405b-98ee-a7150bd4baa2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. The range 1<n<2", "Subsection",
 CellChangeTimes->{{3.9052112473124843`*^9, 3.9052112549838696`*^9}, 
   3.9052115066276274`*^9, {3.9052247961094236`*^9, 
   3.9052247999678926`*^9}},ExpressionUUID->"032d65b6-3ec9-4d6f-8da8-\
91b5acac9e6c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.905212520392042*^9, 
  3.905212535633569*^9}},ExpressionUUID->"19ed5da1-212f-42ce-863a-\
4eee8cb90d17"],

Cell[CellGroupData[{

Cell[TextData[{
 "2.1. For the case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"b91801c2-7926-4a53-b8c2-710193499dfd"]
}], "Subsubsection",
 CellChangeTimes->{{3.9052125690225744`*^9, 3.9052125788616934`*^9}, {
  3.905224788111302*^9, 
  3.9052247907669277`*^9}},ExpressionUUID->"0c456114-00c9-414a-80f4-\
093268f38890"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n32", "=", 
   RowBox[{"3", "/", "2"}]}], ";", 
  RowBox[{"\[Beta]32", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["12", 
            RowBox[{"n", "-", "1"}]], "\[Gamma]", 
           RowBox[{"(", 
            RowBox[{"n", "-", "2"}], ")"}]}]], ")"}], 
        FractionBox["1", 
         RowBox[{"1", "-", "n"}]]], "<", " ", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"24", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Beta]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", " ", "n32"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", " ", "\[Beta]32"}]}], "}"}]}], ",", 
     "\[Gamma]"}], "]"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.9052136110870543`*^9, 3.905213723431736*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"41f78223-7531-4507-b888-bb93af1c1d5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.023094010767585035`"}], "<", "\[Gamma]", "<", 
  "0.023094010767585035`"}]], "Output",
 CellChangeTimes->{
  3.905213087270295*^9, {3.9052136340276155`*^9, 3.9052136592649965`*^9}, {
   3.905213689871199*^9, 3.9052137239066086`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"127059ea-154c-4477-a5f8-8b2395ce66e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EQ", "[", 
    RowBox[{
    "\[Gamma]_", ",", "\[Beta]_", ",", "n_", ",", "x0_", ",", "y0_", ",", 
     "z0_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q2", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"B", "[", "\[Tau]", "]"}], "2"], 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"324", " ", "\[Beta]", " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", 
                RowBox[{"1", "+", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"9", "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"18", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"16", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                   ")"}]}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}]}]}], ")"}], " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{"432", " ", "\[Beta]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"1", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"288", " ", "\[Beta]"}], "+", 
                RowBox[{"288", " ", "\[Beta]", " ", 
                 RowBox[{"Q", "[", "\[Tau]", "]"}]}], "+", 
                RowBox[{"72", " ", "\[Beta]", " ", 
                 SuperscriptBox[
                  RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["6", "n"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
                 "\[Gamma]", " ", 
                 SuperscriptBox[
                  RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"2", "+", 
                    RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                    RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], "n"]}]}], 
               ")"}]}], ")"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"Q", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{"Q2", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{"-", "0.04"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]2", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";", 
  RowBox[{"n1", "=", 
   RowBox[{"3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s11", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["12", 
          RowBox[{"n", "-", "1"}]], 
         RowBox[{"(", 
          RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
      FractionBox["1", 
       RowBox[{"1", "-", "n"}]]], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]2"}], ",", 
       RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.03", ",", "0.025", ",",
        "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.05", ",", "0.02", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.06", ",", "0.015", ",", 
       RowBox[{"-", "2"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
     RowBox[{"Flatten", "[", "ans3", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"graphxyz1", "=", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<B\>\"", ",", "\"\<Q\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Blue"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Green"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Red"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.75", ",", "0.75"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Bold", ",", "14"}], "]"}]}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.02", ",", ".007", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Arrow", "[", "x", "]"}]}], 
     "}"}]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.905211166993845*^9, 3.9052112227013845`*^9}, {
   3.905211273939004*^9, 3.9052113088108225`*^9}, {3.9052114421490617`*^9, 
   3.9052114453795795`*^9}, 3.9052120412472305`*^9, {3.905212139547645*^9, 
   3.905212142469409*^9}, {3.9052127023707447`*^9, 3.905212745686597*^9}, {
   3.905212783931258*^9, 3.9052127843397284`*^9}, {3.9052128454998636`*^9, 
   3.9052128852445197`*^9}, 3.905212933003272*^9, {3.9052130246766605`*^9, 
   3.9052130768132367`*^9}, {3.905213109173933*^9, 3.9052131373897305`*^9}, {
   3.9052137465736446`*^9, 3.9052137651342015`*^9}, {3.9052229415797105`*^9, 
   3.905223028409816*^9}, 3.905238767562149*^9, {3.9052388600286317`*^9, 
   3.9052388739915557`*^9}, 3.905239072363045*^9, 3.9052416495225763`*^9, {
   3.914804588870078*^9, 3.9148045900001884`*^9}, 3.9148063062576623`*^9, {
   3.914806555341403*^9, 3.9148065569568844`*^9}, {3.9148066048616076`*^9, 
   3.9148066400955677`*^9}, {3.914806993164007*^9, 3.9148070545800295`*^9}, {
   3.914807231331588*^9, 3.9148072479153233`*^9}, {3.9148737226689034`*^9, 
   3.9148737918577394`*^9}, {3.9162819316736536`*^9, 
   3.9162819326870513`*^9}},ExpressionUUID->"edef5aa7-7e13-4c2a-8af8-\
4511e1844dc6"],

Cell[BoxData["0.004799999999999999`"], "Output",
 CellChangeTimes->{
  3.905211185469451*^9, {3.9052112184939885`*^9, 3.905211222984338*^9}, {
   3.9052112852058444`*^9, 3.9052113102408795`*^9}, 3.905211445716346*^9, 
   3.905212048682871*^9, 3.9052121433650336`*^9, {3.9052127034781084`*^9, 
   3.90521273661939*^9}, {3.9052127860857716`*^9, 3.9052127985737677`*^9}, {
   3.9052128515662885`*^9, 3.9052128753125477`*^9}, {3.905212912955965*^9, 
   3.905212933572201*^9}, {3.9052130294704905`*^9, 3.9052131378597207`*^9}, {
   3.905213747280393*^9, 3.9052137658187685`*^9}, {3.9052229680826793`*^9, 
   3.905223028714026*^9}, 3.9052387696116805`*^9, 3.905238875892475*^9, 
   3.905238988431131*^9, 3.905239073839173*^9, 3.905241651836568*^9, 
   3.9148063107137322`*^9, 3.91480655798286*^9, 3.914806607007723*^9, 
   3.9148066413512297`*^9, {3.914806995195*^9, 3.914807055001519*^9}, {
   3.914807233904522*^9, 3.9148072495086646`*^9}, {3.9148737251777916`*^9, 
   3.9148737957767057`*^9}, 3.914924058418437*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"281e498b-8d08-412e-a768-6e2a454ed967"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.0035], 
       {Arrowheads[{0, 0.02, 0.007, 0}], Arrow3DBox[CompressedData["
1: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
njd2lrbrjJXnWEwmiYg1q5AX+q8z9n/pgZiI
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#1"]& ], 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.02, 0.007, 0}], Arrow3DBox[CompressedData["
1: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
Uur8aF7wtL84lzqlFvD0UFDHn8m6/wOwbL+r
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#2"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.02, 0.007, 0}], Arrow3DBox[CompressedData["
1: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
DZduPPmSikN/md35JvMWh/wfh7kL3g==
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#3"]& ]}, {}}, 
   {GrayLevel[0], PointSize[0.025], Point3DBox[{0.004799999999999999, 0, 0}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"B\"", TraditionalForm], 
    FormBox["\"Q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"", TraditionalForm]},
  BoxRatios->{0.75, 0.75, 0.75},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{364.5499789257766, 355.17466216565714`},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    RGBColor[0, 0, 1], Bold, 14],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4738607054207988`, -2.7686301425546067`, -1.269811700510978},
  ViewVertical->{
   0.11997355608742225`, -0.21387338149067744`, -0.9694661017949422}]], \
"Output",
 CellChangeTimes->{
  3.905211185469451*^9, {3.9052112184939885`*^9, 3.905211222984338*^9}, {
   3.9052112852058444`*^9, 3.9052113102408795`*^9}, 3.905211445716346*^9, 
   3.905212048682871*^9, 3.9052121433650336`*^9, {3.9052127034781084`*^9, 
   3.90521273661939*^9}, {3.9052127860857716`*^9, 3.9052127985737677`*^9}, {
   3.9052128515662885`*^9, 3.9052128753125477`*^9}, {3.905212912955965*^9, 
   3.905212933572201*^9}, {3.9052130294704905`*^9, 3.9052131378597207`*^9}, {
   3.905213747280393*^9, 3.9052137658187685`*^9}, {3.9052229680826793`*^9, 
   3.905223028714026*^9}, 3.9052387696116805`*^9, 3.905238875892475*^9, 
   3.905238988431131*^9, 3.905239073839173*^9, 3.905241651836568*^9, 
   3.9148063107137322`*^9, 3.91480655798286*^9, 3.914806607007723*^9, 
   3.9148066413512297`*^9, {3.914806995195*^9, 3.914807055001519*^9}, {
   3.914807233904522*^9, 3.9148072495086646`*^9}, {3.9148737251777916`*^9, 
   3.9148737957767057`*^9}, 3.9149240585215883`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"95967681-3ae3-432b-9ee7-2a805a3c809e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "2.2. For the case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "<", "0"}], TraditionalForm]],
  ExpressionUUID->"6a6bfb4a-fb43-47f5-bcd7-4629ec207d6a"]
}], "Subsubsection",
 CellChangeTimes->{
  3.905212586340362*^9, {3.905223057075745*^9, 3.905223057075745*^9}, {
   3.9052248090282574`*^9, 
   3.9052248112152557`*^9}},ExpressionUUID->"7a80dd1a-e38b-48d4-bff6-\
412897fc9fc5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.905212649750107*^9, 3.905212651478779*^9}, 
   3.9052137790886755`*^9},ExpressionUUID->"22795421-bffc-400d-896a-\
64dbcf580818"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EQ", "[", 
    RowBox[{
    "\[Gamma]_", ",", "\[Beta]_", ",", "n_", ",", "x0_", ",", "y0_", ",", 
     "z0_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q2", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"B", "[", "\[Tau]", "]"}], "2"], 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"324", " ", "\[Beta]", " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", 
                RowBox[{"1", "+", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"9", "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"18", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"16", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                   ")"}]}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}]}]}], ")"}], " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{"432", " ", "\[Beta]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"1", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"288", " ", "\[Beta]"}], "+", 
                RowBox[{"288", " ", "\[Beta]", " ", 
                 RowBox[{"Q", "[", "\[Tau]", "]"}]}], "+", 
                RowBox[{"72", " ", "\[Beta]", " ", 
                 SuperscriptBox[
                  RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["6", "n"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
                 "\[Gamma]", " ", 
                 SuperscriptBox[
                  RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"2", "+", 
                    RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                    RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], "n"]}]}], 
               ")"}]}], ")"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"Q", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{"Q2", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{"-", "0.004"}]}], ";", 
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"-", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";", 
  RowBox[{"n1", "=", 
   RowBox[{"3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{"\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.004", ",", 
       RowBox[{"-", "0.25"}], ",", "1.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{"\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.005", ",", 
       RowBox[{"-", "0.2"}], ",", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.006", ",", "0.15", ",",
        "2.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
     RowBox[{"Flatten", "[", "ans3", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphxyz1", "=", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<B\>\"", ",", "\"\<Q\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Blue"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Green"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Red"}], "}"}]}],
           "}"}]}], ",", 
        RowBox[{"BoxRatios", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.75", ",", "0.75", ",", "0.75"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Bold", ",", "14"}], "]"}]}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "]"}]}], "}"}], 
       "]"}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.025", ",", ".0125", ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.905212594428508*^9, 3.9052126140148516`*^9}, {
   3.9052126647101192`*^9, 3.9052126926357865`*^9}, {3.9052137887557526`*^9, 
   3.905213820649747*^9}, 3.9052230647458467`*^9, {3.90522366514196*^9, 
   3.90522372999557*^9}, {3.9052237909393587`*^9, 3.9052237911112413`*^9}, {
   3.9052238388812675`*^9, 3.9052239276748805`*^9}, {3.9052388902689915`*^9, 
   3.9052388951951017`*^9}, {3.9052389295958557`*^9, 3.9052389441639667`*^9}, 
   3.905238979499713*^9, 3.9052390775640306`*^9, {3.905239121052044*^9, 
   3.905239127801811*^9}, {3.914807305313747*^9, 3.9148073585687094`*^9}, {
   3.914811644966505*^9, 3.9148116496853247`*^9}, {3.9162819377639575`*^9, 
   3.916281938042508*^9}},ExpressionUUID->"959e71a4-4fd0-499d-b199-\
d7fe5289bce5"],

Cell[BoxData["0.000047999999999999994`"], "Output",
 CellChangeTimes->{{3.905212594742888*^9, 3.90521262630476*^9}, {
   3.9052126666434155`*^9, 3.905212693044177*^9}, {3.9052137820764246`*^9, 
   3.90521379552444*^9}, 3.9052230651185455`*^9, 3.9052236671335573`*^9, {
   3.9052237209187365`*^9, 3.905223730589423*^9}, {3.905223832257866*^9, 
   3.905223853737522*^9}, {3.9052238859340305`*^9, 3.9052239279872265`*^9}, 
   3.9052388964395304`*^9, 3.905238937057963*^9, 3.905238981024289*^9, 
   3.9052390793031807`*^9, 3.905239129450386*^9, {3.9148073252667775`*^9, 
   3.914807359112255*^9}, {3.9148116457257724`*^9, 3.9148116514949365`*^9}, 
   3.9149240666767397`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d1c911bf-d21b-4fa7-9ee1-948e5b140561"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.0035], 
       {Arrowheads[{0, 0.025, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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
dQNVEPjSy1luzyTRu0LKjrdawSK+bsWa+1XgKYzet8mLSeIOSPz8+twKVzPt
jop7VGFD/PSthJNM8mSl/C6eK1ZgGASWCa+rwomanjTb00zSL+L6rdDHCsuT
jJS4xyuxPWVgTS2TScJjEjO0raxw8U6pe8PLSizsVv4ascj5tR0bNqtbofAC
h5xfeCVCjpbV8S96TvN73HgqYoX5rPsne6mVmPEpb80MZJJ5up2t4Ygl/s52
xkqIVSJ2Zjg30YdJnhtHnhR6aokfGmlnJfoqkL3hhy2/26L/h9DBMj9LaBT9
zvv8tAJR9u5bdPYyyWbnlF+17JbYl3d62W1qBcYk/Clhmov3XGr5UlUWeKdl
tixxVQXSUku5v8kwSYH/8fCtVy2gryHEtn2kHCfH/PhK+JlE8Qktp1vZAlat
C3yPY8thG1KQs+lzBJFMSzhr6rAb2vfjjQ83sfBVkJZ1ixFBOkwXxPJUdmOA
7dvdh5ksTKv+06mwjSD2wcV6n2bNUZDF4RsVxkKgylD0du0I0tM068W3+MOX
Pq1K5l3HgvSyE7aB8+EkZ1jYRafHDBMCbs5t0WXILbv1vSUknBjnfz+de56K
3Ly0ca/97zHU5m4WOh5G0owfOT92o4LRtYqupPMeVU6Z/sJPwkjI0hp5JX0q
lGYdaTSx94jIk1Rs9goj1GM7mQnfTaH0Sr6Vvb4Uc1c+QG40lJi8Ln1JcTDF
S9KR7G1RioXs17Y1oyFk8LWKxkejXSi3j/0+ZF+Cd505b05xBBOOkIFlrAMm
CBwOOhac8xZR0nP7fe6cJJGChyJ36G+DTQPVLyqyAEPRVL+n5seJv43ZBoOu
rVjbtXWN6NgzCFrm+2ZKuZM3bP8cLau24Nf3sFFnvmy8q526pSTrTCxU1ftX
3teE4sfL/uu6M8GvJv+n0MieJFEGE/wdNoG+nyKZr5wBn4SbyY7xNMKSEsm/
kL0Rf6iqZHfwXRA7/c4BO2vSYn1A2zRQDf6rJB4Yq6WBc4UQFR67idqvF2o7
DNdjMqaxf6onFbHpB+6xXTYlda3ehUNe6+C57KnvHd5baJbTLd8Ta0Lm+dXu
7XmtgjHqwNc7Ptcx3hrybl2XEYnf1zrs4aKMSX4OG4uDSRhzep+ytmYbWZnb
Gf1ZSgmnZtyyLRnXsI2q9zqmD2T1Y8a2/iWKkN+aOeFUcxWqutWHbav1SNMX
dceLaxSQTizLVQKv4NBGvQssmi6ppIu+GDKUx6Shf1Kb2mUcHXsmEMGlTdjS
GHH3ouTAm3ZmyyHpS2CP+b3vvbwWIXH5gqxaWZTIF9UHqMQjhCb4stNBkwhb
P2GL2iALjx6qSrLteSRfCvgnVreJCIzYszEyZBAWoNNh9iEWMbYsteRYdbLj
4LnEsNUyiKhLu59vEgOFcyYZJhYbyStW729u2hrIr0uSaZ+PxlIfHqdtcWpk
2W02MhG+GgULW1wq66LAGlb9F/RyPXGQerFX6Yk0nDSWV/s8PIshOzMOv5F1
xISr8eTItBRkRL8/SXsYiblrHXw1LmuJ9r4psk9fCj1qNE+3h2fA270yRaxX
mVzU0pLqT5Bc3FnQmU+ECc+kXNO/0Uokwj1/jJ1DEt53PxYJzURgS+56i1Rn
RfK0oLax0VsCI8sE+tXXRWBPerRmn44CGWm5mqs5ugqaL9wPXQoMR5U43+1d
evIkLt5ROJq+Coo5kPN5dBp6p7QkcmzliJg0/zO5GXGEl5S/nzgQBl7+nYkv
jsmS2pHhuTMx4sjn5t+VrBsK5Wtjphn3ZEgkxDhNJMTB2D/JfV44BPeN+ryr
8tYQY7MpD56ClQisdtLZLxAMukFx+ZI9q0lRgt3xa/tXYvqaSRwkTmG9Be+X
jULSpOMunyp9QQz355P1eeSCMDDKy8dgSZL+WOXM34/EQL+5obDNJBBF5Kbp
lwwJwvK50TFLE0NyqlDhsPtJ/P4cwp3MXEXKjX5kPecSw4FnAUGNCQG4VV3w
4JC/OEn8TdItilcAWQ7v4jr80eUYrTd4biUx69bQ8fZbAdmlzufPSvkjR+b2
5g1JYuSYtqbJefUVGL4z0d/AOIFWtoKuzSUriLlo953cnxRccPZes7TRDwfp
411RfyhEmW1KyC+Pgr4/UfNZG/ygWczQOqFOIbfkPyrwnKLAu37SyDiFAUEO
p7dToaLkq8wOIYEgCroyQ5RYNxgojE5w+3JKlDjPhioLB1Kg+So3amcyAzsE
uAs7T4qS4tg9PZIBFMh6BhSbXWWAcyrLrZwuSpyK/Pw0GBREH9TgcohhQHLP
WNk9d1GyW9B4lZfnoueM18AFfwait0ZmnN4tSkr99Pn/OFDwZeT5pLUFA1Oa
L4VfSouSG++zE7gXeW/1vGGfGQP9jxo2EwlRMi6sThW2p0C5np3Xz5QBFcGL
3JUrRQl/urOOsh0FSUZmbIk7Fvsndj/pEhYlq5P9VGz3UCBY0nC9V5eB78XD
oiLcooTKY21YaEbBgUaTvReVGWDKPvuVPC5C7n24Gs2iUvD4oKeysiID52V4
arLGRIhupc9cgykFU/QZHyK32H8y1OLdFxEi7vvT5ftOCgJVd3lMSDNAFarb
9bVPhNCYfnoqOyh46ao97EBhQJG5nUltESEV/N+6tIwo8FTX8pkRZkDP07zR
tVGEBI7fzTLeTsH68RvHrggxAD6ujtA6EWIyYl7pakhB4w3x6g98DOxX4x3M
+yBCYndLiPuBgsKTb1WP8jLwtSysq6ZChFh867vMNKDA8QonOw83A3d3jp36
WiZCLldkaF3Rp6BotNfsPicD4Xm7Xy0tFSG23e7c6XoUtIQ7CuxgZyByacYt
5bci5H/dxXfk
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#1"]& ], 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.025, 0.0125, 0}], Arrow3DBox[CompressedData["
1:eJwNlWc8FXwAhZWKQuReMkOiCBmlCAdpEMU1spo2WdcllHDdCg2UiLSTkRTp
TVR/qYwom5DsrTIyQnl9OF+eD8/v/M6XI3XCm+a0lI2NLX4x7Iv5u2zmV2cw
A/33ajvOJZWT3gP6vX8XFnCKomK75TYDV6a4PwxQPxKzx/UL1hELSPM0yWss
WOSHIsTr4otI99qSKsVlC+AX0VT9WM2AOUcLr49GPrm1QqCJi/kPYtqSSr/b
GWi8qmBsXJRNVg9ZjcTM/4WBZeJKtwEGhuyEv/VfTSYn1U5LO/v9Rbn1UcNt
QwxYx4+x/5QIhflCZdf+vnnk2/yY9e9lQDCrd9O7godI1nm0ao3lPLizmXrm
LQw84fY5uDoxFyiPFk0ic3igQXIXyhj4q8D0XZ5UAB5P4+5WmTmkfXY88jKH
gRVOQ1VNSu9Ao1bF9V6YxfpNLdPH6Qz82b22LuVyGez07xd24g+krql1jxsx
4LSyV7J4eSW0/z4fMk6YQTnzclXZOgaUWvk98q2qMPrXwdlrcBrIoq3KeeWH
6G2d0v1va3HAx97T58IUzq+Wsw8N98NsTUYpp1w9Fjy7xbTqJvFb7Pg+zj1+
qJ1O0ssLaYDcpyjuGPFJhM/9aSwqoeMnb9OgW18TzJ6Z7ht8OoF1FxV+sZ75
IpsR9OdeQSsuMgx22bWMovpaN1+Piy8Syy2lDUO+4d5HWw9JuVH0qCW8T17n
C8UnTXMjCm0o1k2Kmfz9E2Eztau4L/qAfbAxaMLyOzZuNuBbbjKCjN/SZg8q
vKBSuXRPcE87Xm9KmPO36YeRT/m6yp1e+Eab+MTJ34F803PXrqn2wTlFWP/m
E09UCHPqeW/ugHl/c6G0QC8KHGQN9kp5omn7r4pGnQ5oXFUos17SA5md2iYL
CSfR/tLl4QPjDrh6RLy0mO7C9PHw+OHVJ/GoZjl9u2UH5BOyNeSnO5GvITig
GOWBwjvnO0atO3Agctt8G1snvo4lqHYt94BYbLPR5kXuXuk560LtAE3N4e+6
c+5wEywJ0jHvwIsWjmQ3h+/wvf/s5+QKd9hv5GOcNepAXJrpgEnON7z2qjZk
XHTD0GsD552LPd9qS+5X5m/F7slQZmSKKypSzLOsxTqgoxfA8OX6Crk3PERW
zhVOFY4XdnN04FNT+fWJ+42oqMp7EJLvgpKXvGax7e04fMkq883+BuTOGt/b
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
bSq+r0+TcV9KR5MdLf7yO37yP50IoT8=
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#2"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.025, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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
NVD5
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#3"]& ]}, {}}, 
   {GrayLevel[0], PointSize[0.025], 
    Point3DBox[{0.000047999999999999994`, 0, 0}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"B\"", TraditionalForm], 
    FormBox["\"Q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"", TraditionalForm]},
  BoxRatios->{0.75, 0.75, 0.75},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{392.0240593442791, 384.21122724259294`},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    RGBColor[0, 0, 1], Bold, 14],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.9483478300006591`, 2.400195668562217, 1.3758639053143669`},
  ViewVertical->{-0.1337626801264369, 0.1644850841315195, 
   0.9772677230440181}]], "Output",
 CellChangeTimes->{{3.905212594742888*^9, 3.90521262630476*^9}, {
   3.9052126666434155`*^9, 3.905212693044177*^9}, {3.9052137820764246`*^9, 
   3.90521379552444*^9}, 3.9052230651185455`*^9, 3.9052236671335573`*^9, {
   3.9052237209187365`*^9, 3.905223730589423*^9}, {3.905223832257866*^9, 
   3.905223853737522*^9}, {3.9052238859340305`*^9, 3.9052239279872265`*^9}, 
   3.9052388964395304`*^9, 3.905238937057963*^9, 3.905238981024289*^9, 
   3.9052390793031807`*^9, 3.905239129450386*^9, {3.9148073252667775`*^9, 
   3.914807359112255*^9}, {3.9148116457257724`*^9, 3.9148116514949365`*^9}, 
   3.914924066780574*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"79138533-a59a-480c-8c33-3fb875edc08e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. The range 0<n<1", "Subsection",
 CellChangeTimes->{{3.905211481508475*^9, 3.905211485828473*^9}, {
   3.905212480471699*^9, 3.9052124845900483`*^9}, 3.905224782331418*^9, {
   3.9052248142301674`*^9, 
   3.9052248157610054`*^9}},ExpressionUUID->"f57f97dd-e269-411e-aca1-\
cf4bde17c123"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n12", "=", 
   RowBox[{"1", "/", "2"}]}], ";", 
  RowBox[{"\[Beta]12", "=", 
   RowBox[{"-", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["12", 
             RowBox[{"n", "-", "1"}]], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"n", "-", "2"}], ")"}]}]], ")"}], 
         FractionBox["1", 
          RowBox[{"1", "-", "n"}]]], ">", " ", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"24", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Beta]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}]}], "&&", 
       " ", 
       RowBox[{"\[Gamma]", "<", "0"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", " ", "n12"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", " ", "\[Beta]12"}]}], "}"}]}], ",", 
     "\[Gamma]"}], "]"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{
  3.90521254642423*^9, {3.9052239677591767`*^9, 3.905223981615334*^9}, 
   3.905224030462427*^9, {3.905224280666251*^9, 3.9052242874146223`*^9}, {
   3.9052889781085267`*^9, 3.905289001323329*^9}, {3.9052899806253023`*^9, 
   3.9052900024712176`*^9}, {3.905290976125638*^9, 3.905291021438635*^9}, {
   3.9052930741238475`*^9, 3.905293103602169*^9}, 3.905296840778621*^9, 
   3.9052968716051197`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"5205d183-4487-484f-83de-6e79395a7d3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "19.24500897298753`"}], "<", "\[Gamma]", "<", 
  "0.`"}]], "Output",
 CellChangeTimes->{
  3.9052239834741955`*^9, {3.9052240271663275`*^9, 3.905224031056039*^9}, {
   3.905224281447241*^9, 3.905224287758745*^9}, {3.905288980845659*^9, 
   3.9052890015824265`*^9}, {3.905289981146227*^9, 3.9052899882768464`*^9}, {
   3.9052909784674454`*^9, 3.9052910217845297`*^9}, {3.905293083616208*^9, 
   3.905293105063611*^9}, {3.905296842366189*^9, 3.9052968719064617`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"05da5490-56b1-4297-bd8f-7a172248e96b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3.1. For the case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1ee78bf7-947e-42c2-a91c-8fc12e674fbe"]
}], "Subsubsection",
 CellChangeTimes->{{3.9052247529471674`*^9, 3.905224763522812*^9}, {
  3.9052248187915916`*^9, 
  3.9052248233998933`*^9}},ExpressionUUID->"52089b5f-8241-45e2-935c-\
d698b2d8b46c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EQ", "[", 
    RowBox[{
    "\[Gamma]_", ",", "\[Beta]_", ",", "n_", ",", "x0_", ",", "y0_", ",", 
     "z0_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q2", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"B", "[", "\[Tau]", "]"}], "2"], 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"324", " ", "\[Beta]", " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", 
                RowBox[{"1", "+", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"9", "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"18", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"16", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                   ")"}]}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}]}]}], ")"}], " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{"432", " ", "\[Beta]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"1", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"288", " ", "\[Beta]"}], "+", 
                RowBox[{"288", " ", "\[Beta]", " ", 
                 RowBox[{"Q", "[", "\[Tau]", "]"}]}], "+", 
                RowBox[{"72", " ", "\[Beta]", " ", 
                 SuperscriptBox[
                  RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["6", "n"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
                 "\[Gamma]", " ", 
                 SuperscriptBox[
                  RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"2", "+", 
                    RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                    RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], "n"]}]}], 
               ")"}]}], ")"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"Q", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{"Q2", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{"-", "15"}]}], ";", 
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";", 
  RowBox[{"n1", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s11", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.04", ",", "0.025", ",",
        "1.49"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.05", ",", "0.02", ",", 
       "1.8"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.06", ",", "0.015", ",",
        "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
     RowBox[{"Flatten", "[", "ans3", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"graphxyz1", "=", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<B\>\"", ",", "\"\<Q\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Blue"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Green"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Red"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.75", ",", "0.75"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Bold", ",", "14"}], "]"}]}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.02", ",", ".0125", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"Arrow", "[", "x", "]"}]}], 
     "}"}]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.9052124949415054`*^9, {3.905224146019928*^9, 3.9052241918070374`*^9}, {
   3.9052390407580495`*^9, 3.905239111635562*^9}, {3.905289722707472*^9, 
   3.9052897287903886`*^9}, {3.9052910782223387`*^9, 
   3.9052910981579685`*^9}, {3.91480737301571*^9, 3.9148073777120953`*^9}, {
   3.914807462729535*^9, 3.91480748391549*^9}, 3.9148115250555687`*^9, {
   3.916281942252844*^9, 
   3.9162819427867637`*^9}},ExpressionUUID->"c7e9f311-c3e2-4abf-9969-\
d8cc14f31018"],

Cell[BoxData["0.023703703703703703`"], "Output",
 CellChangeTimes->{{3.90522413031975*^9, 3.905224192228734*^9}, 
   3.9052390428365126`*^9, {3.905239106116903*^9, 3.905239112151165*^9}, {
   3.905289724877111*^9, 3.905289730980583*^9}, {3.90529107935297*^9, 
   3.9052910986294093`*^9}, 3.914807380804725*^9, {3.9148074657175245`*^9, 
   3.914807484423433*^9}, 3.9148115258101387`*^9, 3.9149240741099596`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7f36be21-e2a1-42d8-9741-ee31030a8bad"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.0035], 
       {Arrowheads[{0, 0.02, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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

         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#1"]& ], 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.02, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#2"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.02, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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
+T7F7VCxy9O+jcD9H19XIhc=
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#3"]& ]}, {}}, 
   {GrayLevel[0], PointSize[0.025], 
    Point3DBox[{0.023703703703703703`, 0, 0}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"B\"", TraditionalForm], 
    FormBox["\"Q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"", TraditionalForm]},
  BoxRatios->{0.75, 0.75, 0.75},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{372.60898356004975`, 373.2870591918751},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    RGBColor[0, 0, 1], Bold, 14],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.488523147015133, -2.7151064424218387`, -1.3647328848971088`},
  ViewVertical->{
   0.9835462135651593, -0.1751466722068664, -0.044277409550454595`}]], \
"Output",
 CellChangeTimes->{{3.90522413031975*^9, 3.905224192228734*^9}, 
   3.9052390428365126`*^9, {3.905239106116903*^9, 3.905239112151165*^9}, {
   3.905289724877111*^9, 3.905289730980583*^9}, {3.90529107935297*^9, 
   3.9052910986294093`*^9}, 3.914807380804725*^9, {3.9148074657175245`*^9, 
   3.914807484423433*^9}, 3.9148115258101387`*^9, 3.9149240742313833`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"1717d24b-2d12-497e-a265-ac65e4266cb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3.2. For the case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "<", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ed986f4c-7618-4d8d-af98-1bf0e523b35f"]
}], "Subsubsection",
 CellChangeTimes->{{3.905224770787196*^9, 3.9052247726149373`*^9}, {
  3.905224826274207*^9, 
  3.9052248347097244`*^9}},ExpressionUUID->"a7a8373e-d83f-44c2-bb2a-\
58176e40c5e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EQ", "[", 
    RowBox[{
    "\[Gamma]_", ",", "\[Beta]_", ",", "n_", ",", "x0_", ",", "y0_", ",", 
     "z0_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q2", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"B", "[", "\[Tau]", "]"}], "2"], 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"324", " ", "\[Beta]", " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", 
                RowBox[{"1", "+", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"9", "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"18", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"16", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                   ")"}]}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}]}]}], ")"}], " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{"432", " ", "\[Beta]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"1", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"288", " ", "\[Beta]"}], "+", 
                RowBox[{"288", " ", "\[Beta]", " ", 
                 RowBox[{"Q", "[", "\[Tau]", "]"}]}], "+", 
                RowBox[{"72", " ", "\[Beta]", " ", 
                 SuperscriptBox[
                  RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["6", "n"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
                 "\[Gamma]", " ", 
                 SuperscriptBox[
                  RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"2", "+", 
                    RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                    RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], "n"]}]}], 
               ")"}]}], ")"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"Q", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{"Q2", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{"-", "15"}]}], ";", 
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"-", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}]}], ";", 
  RowBox[{"n1", "=", 
   RowBox[{"1", "/", "2"}]}], ";", 
  RowBox[{"\[Gamma]2", "=", 
   RowBox[{"-", "20"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"s11", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]2"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s3", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.026", ",", "0.025", 
       ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.02", ",", "0.02", ",", 
       "1.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.03", ",", "0.015", ",",
        "1.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
     RowBox[{"Flatten", "[", "ans3", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"graphxyz1", "=", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<B\>\"", ",", "\"\<Q\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Blue"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Green"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Red"}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.75", ",", "0.75"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Bold", ",", "14"}], "]"}]}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.0065", ",", ".0025", ",", "0"}], "}"}], "]"}], 
      ",", 
      RowBox[{"Arrow", "[", "x", "]"}]}], "}"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.9052243027084417`*^9, 3.905224597662951*^9}, {
  3.905224642184581*^9, 3.9052246934446287`*^9}, {3.905239147919345*^9, 
  3.905239183044974*^9}, {3.905290071638178*^9, 3.9052900831147594`*^9}, {
  3.905290915747805*^9, 3.905290955212412*^9}, {3.9052912177094355`*^9, 
  3.9052912178661475`*^9}, {3.905291659247875*^9, 3.9052917314835105`*^9}, {
  3.905292742679058*^9, 3.905292757885789*^9}, {3.90529325494237*^9, 
  3.9052932573937273`*^9}, {3.9052932921373158`*^9, 3.905293299312045*^9}, {
  3.914810416543812*^9, 3.9148104270042334`*^9}, {3.914810496281535*^9, 
  3.9148104993450503`*^9}, {3.914810534997691*^9, 3.9148105437214727`*^9}, {
  3.914810715506791*^9, 3.9148107860552096`*^9}, {3.91492399900394*^9, 
  3.914923999666481*^9}, {3.9162819464367805`*^9, 
  3.916281946579158*^9}},ExpressionUUID->"f6a90f74-ecc6-4995-96d8-\
553abd38d2fc"],

Cell[BoxData["0.023703703703703703`"], "Output",
 CellChangeTimes->{{3.9052243055984507`*^9, 3.905224432707672*^9}, {
   3.905224467793573*^9, 3.9052245983658333`*^9}, 3.9052247020836143`*^9, 
   3.905239151744059*^9, 3.9052391846021614`*^9, {3.905290941483123*^9, 
   3.9052909558249025`*^9}, {3.9052917263355036`*^9, 3.905291732159196*^9}, {
   3.9052927445512004`*^9, 3.905292761753935*^9}, 3.9052928148799314`*^9, 
   3.905293257723975*^9, {3.9052932927654967`*^9, 3.9052932999249115`*^9}, 
   3.914810431276016*^9, {3.914810535903906*^9, 3.914810544135418*^9}, {
   3.9148107180158367`*^9, 3.9148107878755984`*^9}, 3.9149240813466177`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"182e6e74-2635-4b99-9f96-b55d7b0566b3"],

Cell[BoxData["0.013333333333333334`"], "Output",
 CellChangeTimes->{{3.9052243055984507`*^9, 3.905224432707672*^9}, {
   3.905224467793573*^9, 3.9052245983658333`*^9}, 3.9052247020836143`*^9, 
   3.905239151744059*^9, 3.9052391846021614`*^9, {3.905290941483123*^9, 
   3.9052909558249025`*^9}, {3.9052917263355036`*^9, 3.905291732159196*^9}, {
   3.9052927445512004`*^9, 3.905292761753935*^9}, 3.9052928148799314`*^9, 
   3.905293257723975*^9, {3.9052932927654967`*^9, 3.9052932999249115`*^9}, 
   3.914810431276016*^9, {3.914810535903906*^9, 3.914810544135418*^9}, {
   3.9148107180158367`*^9, 3.9148107878755984`*^9}, 3.914924081349619*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e66ca290-0715-4970-873f-a78754c8ecc1"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.0035], 
       {Arrowheads[{0, 0.0065, 0.0025, 0}], Arrow3DBox[CompressedData["
1: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
F64S/g8RqBjs
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#1"]& ], 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.0065, 0.0025, 0}], Arrow3DBox[CompressedData["
1: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
5W0/xz+wsSxwjaCMGFxuMXck/APd2CFV
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#2"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.0065, 0.0025, 0}], Arrow3DBox[CompressedData["
1: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
4yM7WypimK4gld8MdZsU7FFp0/Y/rrc0dzARqKO1nlv++jk3kPG1nD++WqTX
MWOtiqg9m/jilmCJJtD85xKk0zeFuFRR/47qMVEpU8REx+2//ccaSTnGKSA8
zDfoKyaY0M2C2ee4g8Ld1s+dRdCx6+/V81L00FeiEn+uJ07fWH5wb4288OKW
dKSsFmIW8/nP+mcj6XdQXd6JfODdezfDjkQQZGj74zohl3y0v30j1EfNU72d
nCNvTjX98djo2CSJtElyaOaiEmPYD4J7wn/XJzmmRzLANnJYSASS9ZESYZ1u
/eNj5pVG22Z5BN4Ef/dininCgE/LHz+f97V6QrCPwKl4nsy6OEe+Qvefc9Mq
76rVGCCs8G0/yzu4SrbZ+59THi/niEvuIqhw0VQZNS+QUy//55KKa9oaZz4Q
vKP1/VjKhsiBN//zkhOyRtGhRIL6z1+3xxWiyI/E/nMPI2Yah/67BIXJC18e
Ob0ni3P85z/eBhtev3+awJdlOKVtU0le4/nPz3CfW/l6Qpmsy34or/YjmZwk
/Z/za5gWpd0/Qrjof5X/umgeeVH9Pw/jdZNIU1QhHBqqHayuDye/1/i7ftyK
SgVJnnxwwCpU0teUTPnXl9dVRuxSDclT2VZ7KjpOkd/8fa7yQpk3HXQW5G2e
O/sSQ9QJL/+6+XbeZNOrG2RHDZvEpjxdwve/vnLu2WIshwWZS+2Q5XM3PcKl
v+s735IYIty8TpY9nl2TJ6lNaPzrB3ztxlWe6JIduRxR2SIVgqrmf+5q1Tlj
eVyd3OglrGbWI0Eo/etTyimjOn7SZJMbo0zdTxZIjFr/eaMzZWdb5m6yipRR
I9NRHrLoX989sRo4enWZdF4tTKLtKTdB/K8Lzx0Sere4QloPnVB+5c5LkPzf
Oj3PIMF1jTShfSTY8tdRgsxfz6Xw8y0U+03iKTt6rfSyMEH+rx+duf84+hwF
eSwj/EqZnjhB8a9TxYUeuFJMSTa8SBdhfFCaoPrXbQyMVNSDqMgJ9vOzuhEy
BPW/7njg69WCu1Tkfrmgco+DsgSVv67D2Wdqb0pBPi3F+kUg7gxB+a+rf/Z3
FFXdJgUwvT477yf9776GZQELj3I3SQ4VEqusl6QI5/76p3eHrVb410lgsPJ2
dLD4v+c6sbefmunKAsl33C9Uw/s4QfqvazgLRLc5z5GYD45aPfAUJEj9dU3F
w7YNhBnSGRVaGPqIn3D6r1/R+MhYxveNxILY/6Qo4iYI/28/ENmQrv5E8mh6
RsuzTU048ddrWUBh+4520lwprd0vdqp/TiV9rGF9+CNJdwb687Ntyh3/66cm
K2yC31STGOf1T20cmZc79tfpTkRv0gqVkK5JpCyZ/xj55y2zPOVqTFkkGkrl
wJf6Tf9c6FzY8mGNm3IrArc2rRbr/znnZ3ZJGr50uSzdJeCV2v7vvjOyvNs7
Z4vkJlJrUoabe/45ufXMj+WEcrmzuwu8Ofg//3O2XgrKJWOSXCWV2L4s575/
PjptXKr3pFQuXyysSyi6+583QLWHd0ey5NpYuXwUvOv/eRB92MRuaU+56MEw
k9NTmf+8sOrXFCnFmPSifFeM2x6Xf/6Q06DTJeMIiWhY++pl3gPS/7z35beN
0hJduTMlrvuRw+H/vE11ubYmzEpOazF6s/XYE9K/eope0HZWcpATdBZNoOP4
f77nUnnglJNcS2SW9UJwxD+vPuEkzvbuvhxv8Hcr3dOBJKH/zV2tCleJgbfc
t5Xbd853u/9zmsqUCfPrPnK7f5xj0jhmQRL864/StTwuZfrJTRE1CtpfqMn9
zy/W7ulYUQ+Qe9W50/T6MbN/TtUhb9mUEihn8NaH/rnA9X/OuMVoXPUsQM5h
26jxgpf+P9dzqmyJafeTM5A4YdAxqPXP87rYCg4Juco9lJupMJ9Ykv3fPoWN
8jQY9JXlskWVVOi2tP/tf0K7/InXJR2S8L7lpdEco3/+u8DvnW2dFWkw77kF
kcH8n1NMflPizHUkLdTRWR0qvvGvbki21YlwDTeSVCZfnF+w1b++5BK11u5W
+JEW76ZK9ftbk/43F3SegY/8GENJZypP6YdcsvnnYpTy77I5IkjtTKyVO8ds
SP+buyWmUcaGwChS9ZkPwQtTt0j/Bz4RnoM=
         "]]}},
      Annotation[#, "Charting`Private`Tag$1277#3"]& ]}, {}}, 
   {GrayLevel[0], PointSize[0.025], 
    Point3DBox[{0.023703703703703703`, 0, 0}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"B\"", TraditionalForm], 
    FormBox["\"Q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"", TraditionalForm]},
  BoxRatios->{0.75, 0.75, 0.75},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{373.89233065559773`, 381.94693587803965`},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    RGBColor[0, 0, 1], Bold, 14],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.30004465894082, -0.8548577848104251, 3.0048464274415805`},
  ViewVertical->{-0.1348909340855679, -0.9296958787162779, 
   0.34273898085786925`}]], "Output",
 CellChangeTimes->{{3.9052243055984507`*^9, 3.905224432707672*^9}, {
   3.905224467793573*^9, 3.9052245983658333`*^9}, 3.9052247020836143`*^9, 
   3.905239151744059*^9, 3.9052391846021614`*^9, {3.905290941483123*^9, 
   3.9052909558249025`*^9}, {3.9052917263355036`*^9, 3.905291732159196*^9}, {
   3.9052927445512004`*^9, 3.905292761753935*^9}, 3.9052928148799314`*^9, 
   3.905293257723975*^9, {3.9052932927654967`*^9, 3.9052932999249115`*^9}, 
   3.914810431276016*^9, {3.914810535903906*^9, 3.914810544135418*^9}, {
   3.9148107180158367`*^9, 3.9148107878755984`*^9}, 3.9149240814613056`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c0af6fc3-1444-4600-87b4-0aab5c8a645d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. In the range n<0", "Subsection",
 CellChangeTimes->{{3.9052248634070573`*^9, 
  3.905224873342224*^9}},ExpressionUUID->"7812c1be-64cd-431d-8b86-\
79d63b4c7561"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n0", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"\[Beta]10", " ", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["12", 
            RowBox[{"n", "-", "1"}]], "\[Gamma]", 
           RowBox[{"(", 
            RowBox[{"n", "-", "2"}], ")"}]}]], ")"}], 
        FractionBox["1", 
         RowBox[{"1", "-", "n"}]]], "<", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"24", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Beta]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", " ", "n0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", " ", "\[Beta]10"}]}], "}"}]}], ",", 
     "\[Gamma]"}], "]"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.905224883855386*^9, 3.9052249165509644`*^9}, {
   3.9052251328080635`*^9, 3.9052251918122396`*^9}, 3.905225292978979*^9},
 CellLabel->
  "In[238]:=",ExpressionUUID->"ebcfa68b-cca7-4b7b-8615-b44967b1c25f"],

Cell[BoxData[
 RowBox[{"\[Gamma]", "<", 
  RowBox[{"-", "3.703703703703704`*^6"}]}]], "Output",
 CellChangeTimes->{{3.905224901694894*^9, 3.905224917019556*^9}, {
   3.9052251339483957`*^9, 3.9052251591151714`*^9}, 3.905225192140432*^9, 
   3.905225359065196*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"db42ab1d-314e-42bf-9f75-df70e56aecc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EQ", "[", 
    RowBox[{
    "\[Gamma]_", ",", "\[Beta]_", ",", "n_", ",", "x0_", ",", "y0_", ",", 
     "z0_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
       RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Q2", "'"}], "[", "\[Tau]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"B", "[", "\[Tau]", "]"}], "2"], 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"324", " ", "\[Beta]", " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "3"]}], "-", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", 
                RowBox[{"1", "+", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"2", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"9", "+", 
                 RowBox[{"4", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"18", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"16", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], 
                   ")"}]}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}]}]}], ")"}], " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Q", "[", "\[Tau]", "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
              RowBox[{"432", " ", "\[Beta]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"Q", "[", "\[Tau]", "]"}]}], ")"}], "2"], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{"1", "+", "n"}]], " ", 
               SuperscriptBox["3", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["6", "n"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
               "\[Gamma]", " ", 
               RowBox[{"B", "[", "\[Tau]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"2", "+", 
                   RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                  RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}]], " ", 
               RowBox[{"Q2", "[", "\[Tau]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"12", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
                  RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}], ")"}]}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"288", " ", "\[Beta]"}], "+", 
                RowBox[{"288", " ", "\[Beta]", " ", 
                 RowBox[{"Q", "[", "\[Tau]", "]"}]}], "+", 
                RowBox[{"72", " ", "\[Beta]", " ", 
                 SuperscriptBox[
                  RowBox[{"Q", "[", "\[Tau]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["6", "n"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
                 "\[Gamma]", " ", 
                 SuperscriptBox[
                  RowBox[{"B", "[", "\[Tau]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"2", "+", 
                    RowBox[{"Q", "[", "\[Tau]", "]"}]}], 
                    RowBox[{"B", "[", "\[Tau]", "]"}]], ")"}], "n"]}]}], 
               ")"}]}], ")"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Q", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Q2", "[", "\[Tau]", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
     RowBox[{
      RowBox[{"Q", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
     RowBox[{
      RowBox[{"Q2", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    SuperscriptBox["10", "7"]}]}], ";", 
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";", 
  RowBox[{"n1", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"\[Gamma]2", "=", 
   RowBox[{
    RowBox[{"-", "3.5"}], "*", 
    SuperscriptBox["10", "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"s11", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["12", 
         RowBox[{"n", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"n", "-", "2"}], ")"}], "\[Gamma]"}]], ")"}], 
     FractionBox["1", 
      RowBox[{"1", "-", "n"}]]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]2"}], ",", 
      RowBox[{"n", "\[Rule]", " ", "n1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"A12", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "84"}], "+", 
        RowBox[{
         SuperscriptBox["12", "n"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"4", " ", "n"}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              SuperscriptBox["12", 
               RowBox[{"1", "-", "n"}]], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]"}]], 
             ")"}], 
            RowBox[{"-", 
             FractionBox["1", 
              RowBox[{"1", "-", "n"}]]}]], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}]], " ", "\[Gamma]"}]}], ")"}], " "}], 
     RowBox[{
      RowBox[{"288", " ", "\[Beta]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          SuperscriptBox["12", 
           RowBox[{"1", "-", "n"}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]"}]], ")"}], 
        FractionBox["1", 
         RowBox[{"1", "-", "n"}]]]}], "+", 
      RowBox[{
       SuperscriptBox["12", "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox["12", 
             RowBox[{"1", "-", "n"}]], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "\[Gamma]"}]], 
           ")"}], 
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"1", "-", "n"}]]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "3"}], "+", "n"}]], " ", "\[Gamma]"}]}]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "\[Rule]", " ", "n1"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", " ", "\[Gamma]1"}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", "\[Beta]1"}]}], "}"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.000506", ",", "0.25", 
       ",", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{
      "\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.000302", ",", "0.2", 
       ",", "1.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
      RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "ans2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans3", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"EQ", "[", 
      RowBox[{"\[Gamma]1", ",", "\[Beta]1", ",", "n1", ",", "0.000305", ",", 
       RowBox[{"-", "0.15"}], ",", "2.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q", "[", "\[Tau]", "]"}], ",", 
       RowBox[{"Q2", "[", "\[Tau]", "]"}]}], "}"}], "/.", 
     RowBox[{"Flatten", "[", "ans3", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphxyz1", "=", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xans1", ",", "yans1", ",", "zans1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xans2", ",", "yans2", ",", "zans2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xans3", ",", "yans3", ",", "zans3"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", "60"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<B\>\"", ",", "\"\<Q\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(Q\), \(2\)]\)\>\""}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Blue"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Green"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Red"}], "}"}]}],
           "}"}]}], ",", 
        RowBox[{"BoxRatios", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.75", ",", "0.75", ",", "0.75"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Bold", ",", "14"}], "]"}]}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.025", "]"}], ",", "Black", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], "]"}]}], "}"}], 
       "]"}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.015", ",", ".0125", ",", "0"}], "}"}], "]"}], 
       ",", 
       RowBox[{"Arrow", "[", "x", "]"}]}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9052249345936003`*^9, 3.9052249778336196`*^9}, {
   3.905225015378869*^9, 3.9052250940970464`*^9}, {3.9052251379318666`*^9, 
   3.905225277795127*^9}, {3.905225381497471*^9, 3.9052253997283554`*^9}, {
   3.905225434083117*^9, 3.905225453344318*^9}, 3.905227839589823*^9, {
   3.9052382907051764`*^9, 3.9052384740955505`*^9}, 3.9052391985676813`*^9, {
   3.905239256673807*^9, 3.9052392669086647`*^9}, {3.9052975749664145`*^9, 
   3.9052975751235294`*^9}, 3.914810807920306*^9, {3.914810953403874*^9, 
   3.9148110232501616`*^9}, {3.916281951258943*^9, 
   3.9162819514006705`*^9}},ExpressionUUID->"4694c911-b168-4dc1-b868-\
2a6438a0e471"],

Cell[BoxData["0.0015491933384829668`"], "Output",
 CellChangeTimes->{{3.9052249647270656`*^9, 3.905225095252948*^9}, {
   3.9052251386503844`*^9, 3.9052251942339153`*^9}, {3.9052252254618015`*^9, 
   3.9052252785761137`*^9}, {3.9052253843096333`*^9, 
   3.9052254003531313`*^9}, {3.905225434973454*^9, 3.905225454031581*^9}, {
   3.9052278413393316`*^9, 3.9052278505632644`*^9}, {3.9052382936224213`*^9, 
   3.9052384746840353`*^9}, 3.905239200073185*^9, 3.9052392686790485`*^9, {
   3.905239305321785*^9, 3.905239310709281*^9}, 3.9052975830434365`*^9, 
   3.9148108096892157`*^9, {3.9148109564169245`*^9, 3.9148110238593097`*^9}},
 CellLabel->
  "Out[808]=",ExpressionUUID->"d7e1b6bc-1d74-4f60-bb19-7c3a55d9503d"],

Cell[BoxData["0.003703280399090206`"], "Output",
 CellChangeTimes->{{3.9052249647270656`*^9, 3.905225095252948*^9}, {
   3.9052251386503844`*^9, 3.9052251942339153`*^9}, {3.9052252254618015`*^9, 
   3.9052252785761137`*^9}, {3.9052253843096333`*^9, 
   3.9052254003531313`*^9}, {3.905225434973454*^9, 3.905225454031581*^9}, {
   3.9052278413393316`*^9, 3.9052278505632644`*^9}, {3.9052382936224213`*^9, 
   3.9052384746840353`*^9}, 3.905239200073185*^9, 3.9052392686790485`*^9, {
   3.905239305321785*^9, 3.905239310709281*^9}, 3.9052975830434365`*^9, 
   3.9148108096892157`*^9, {3.9148109564169245`*^9, 3.914811023863309*^9}},
 CellLabel->
  "Out[809]=",ExpressionUUID->"2bba9272-3145-4c47-8227-096ad6812f45"],

Cell[BoxData[
 RowBox[{"-", "3.777034099686875`*^6"}]], "Output",
 CellChangeTimes->{{3.9052249647270656`*^9, 3.905225095252948*^9}, {
   3.9052251386503844`*^9, 3.9052251942339153`*^9}, {3.9052252254618015`*^9, 
   3.9052252785761137`*^9}, {3.9052253843096333`*^9, 
   3.9052254003531313`*^9}, {3.905225434973454*^9, 3.905225454031581*^9}, {
   3.9052278413393316`*^9, 3.9052278505632644`*^9}, {3.9052382936224213`*^9, 
   3.9052384746840353`*^9}, 3.905239200073185*^9, 3.9052392686790485`*^9, {
   3.905239305321785*^9, 3.905239310709281*^9}, 3.9052975830434365`*^9, 
   3.9148108096892157`*^9, {3.9148109564169245`*^9, 3.9148110238673134`*^9}},
 CellLabel->
  "Out[810]=",ExpressionUUID->"a7d55699-ebc6-45e3-af29-972ca6d577e3"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.0035], 
       {Arrowheads[{0, 0.015, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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

         "]]}},
      Annotation[#, "Charting`Private`Tag$35473#1"]& ], 
     TagBox[
      {RGBColor[0, 1, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.015, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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
E6lZwg==
         "]]}},
      Annotation[#, "Charting`Private`Tag$35473#2"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.0035], 
       {Arrowheads[{0, 0.015, 0.0125, 0}], Arrow3DBox[CompressedData["
1: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
mimzkP7egfgknHj2JuM9HGn7uS/49Fk3Wa4RBS9cHWV4GIYb2j5/XmFJJaH+
CtF/cfTh7hMBuPeO/3nlcJU42wF53BDHnpJbH9yI969tr3d1W8DbXsLl32pk
33QOIx62/88J3ZLmqqv2uFzxk84Jp6KIlNvOIzDIlyd+FaelSxo2U4siLm/H
eeRMTaKq61VcM+f83SdXo4jvtn3gpdge9pmruOpZKHfNjSLmbTseJ8i5p+sa
ruBczyMf1miixbbDx9sZV6454ETWheJ0f0YTGbeda4P2w4kfTrimpzeD2xhj
iQzbLize2Bct4IzzD6VOyxOOJdJt+8bjC3zV9s642MKbW79UYolHtj3P3uCn
/BtnnGOHF3Wt6//f59YJuRPr51xwdQyqOiklscRj226G8vl17VxwaypJ9Svt
sUTWbUeNQ0nJoS64ypBxSft3scRT236jhs9gM9EF97F9oJt2OpYouu3y0sz4
iHwXnMZxkcwj87HEa9vOHq9Naq11wS1/O6+i0xdLrNn2k+4XQMTfBVf9JOZe
tU0scXDbvcbtT7tbuODgxkW7Voglzm+7hgJRXlvBBTcoSbh9lyGWyLWdr1qB
BzJPppxxBjbSnRllMcS0bZd8uGkto+eEuxOna3epKZrofP0/zyj6WS962AqX
9TLH+TTdXWKc03b8D5ddX65Vwp2ePq4upedOHHHd7jtbYYHVDh2iy2Mlqi9g
jfu87bYWJildp3SJLc3pipcO2uB+bHuDz/6Bb7d1iR4Jm8fd39ngdt/4z0X5
4k5s4fSIsZwNOlaudjixbedUCLgpnK1PXHSwiemNuIa7u+0DQWO3SZpGxOwT
+WNOci443u3638jx9z7w1ZS4a+vqq7tuHjjhbZedrw7z5DUjSibO+mXUeOCk
t53+o+q1q9ZmRErj9adylJ44tW3nXXUrXBg1I5ICR9nX73nirm27I8xYd5aa
E3WfaX2aueeFy9p2Dku9wU9cl4mTt81fDiv74Cjd/3MiUpQ7EmZBfNr2WHWo
zg9Ht+1MNLlyc88tiA6df5Kv8vrjOLddnvr8ta9NFsRzzs4mvwL8caLbfjBL
8KP6iAVxL/MhpbUmfxxsu3eNT4nOZwtipggF+5/f/jjDbS/cFf5ab9qCuAus
u48pBuDst52NlTFqrdeCWNBSEemsE4Bz3nY6+ZDs/TUWRO5VnQ455QCcx7ZT
K/bkqqZZEL+tHkniEgrABWx7QZb+ew0TCyIlZSzb5Y/+uNBtl6UeEeXjvUyc
M3cl/Gn1+58LptPsfzp1iRji3sYtHe+HC9n2R37al0iZl4hxdbUkZms/XPC2
S74k+rgzXiLWzgutnVn1/d9zFdLdLr2bwvKiwb3cs8sX57Dty4pyP6ulTIhj
ma6eT/u8cLLbfkMoq3NdVJ94d6r2kSXpBm7ntv/9zXZQ+sh5YtwZO4nmBhvc
qW0/9XkDrkjKEh3YZyxTn1rgtrbzy18kQSn0VYD4flHlduekIa54280CTkV3
XGYmXrnCbRd6UR1XsO3+AdmPX8oeI5b/ihQMSVfDvdz2exKBxB56JiLT51t5
d36p4rK3vVow0vt6CwNx+VNwTEq8Ci5x2ysW9fq+H6clTnnOBnOPK+HubLt0
C1uyz9if2tBBkZNGU3jc7W2v+6qt5WO1WSv7qb5vQRqPC932rDRV2X1Ta7Xy
lTKK0RE4XPD/O79PeXP65K9aGb+mw/PC8riAbT9M4L1lGjhZa5wVJLPHXwbn
se0W+lpHTvBNyefW2WQu0Ynj3Ld9hHc2Qdz3m7z1Z46DrHZiOLdtt31mobZi
vyBfNWi4pVctinPd9sf0s/ZvOpblzw7tZh+zEME5bvveNNOjZmYUOF7rkIQF
M4H/+WJX8aFs0g4c8ddY0OpOfpzDtleeEP7UzbETp8/6Svboy9P/69Of3bS0
7xaocKc7s+4mrfPirm47Z8hLh26TPThf6pS+Xek8/3O5nW9Ta1r24lyuv9O8
o8qNs992Jm/pF3ni+3GP27RM2Bc4cXbbnnjAMiIn6wDOY9es1lA8B+7/AGJh
Imo=
         "]]}},
      Annotation[#, "Charting`Private`Tag$35473#3"]& ]}, {}}, 
   {GrayLevel[0], PointSize[0.025], 
    Point3DBox[{0.0015491933384829668`, 0, 0}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"B\"", TraditionalForm], 
    FormBox["\"Q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(2\\)]\\)\"", TraditionalForm]},
  BoxRatios->{0.75, 0.75, 0.75},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{359.8486647969456, 336.1249714610774},
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    RGBColor[0, 0, 1], Bold, 14],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.63183084897233, -2.3568202055833556`, 1.7979228567700707`},
  ViewVertical->{-0.9916103928576263, -0.10890893553917379`, 
   0.06962522916636177}]], "Output",
 CellChangeTimes->{{3.9052249647270656`*^9, 3.905225095252948*^9}, {
   3.9052251386503844`*^9, 3.9052251942339153`*^9}, {3.9052252254618015`*^9, 
   3.9052252785761137`*^9}, {3.9052253843096333`*^9, 
   3.9052254003531313`*^9}, {3.905225434973454*^9, 3.905225454031581*^9}, {
   3.9052278413393316`*^9, 3.9052278505632644`*^9}, {3.9052382936224213`*^9, 
   3.9052384746840353`*^9}, 3.905239200073185*^9, 3.9052392686790485`*^9, {
   3.905239305321785*^9, 3.905239310709281*^9}, 3.9052975830434365`*^9, 
   3.9148108096892157`*^9, {3.9148109564169245`*^9, 3.9148110239396086`*^9}},
 CellLabel->
  "Out[819]=",ExpressionUUID->"91c6fa4f-1eb1-4506-9688-77266e80e906"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1743, 1021},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 212, 4, 59, "Subsection",ExpressionUUID->"bdb0df7f-7ae9-4dbb-a48f-9f7d4597539e"],
Cell[CellGroupData[{
Cell[817, 30, 1244, 39, 62, "Input",ExpressionUUID->"6a4857c3-82c5-4a46-bb8f-36623575b93d"],
Cell[2064, 71, 290, 5, 38, "Output",ExpressionUUID->"183e0004-a21e-458c-a80e-73de94ce4062"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2391, 81, 16562, 426, 706, "Input",ExpressionUUID->"14050313-6540-47a6-8752-4fe077503869"],
Cell[18956, 509, 987, 13, 38, "Output",ExpressionUUID->"74d2bf39-aa62-4b29-b4ed-2c301e971213"],
Cell[19946, 524, 985, 13, 36, "Output",ExpressionUUID->"4a2dea4e-98ba-4e64-876a-c302e2f0065d"],
Cell[20934, 539, 46539, 782, 362, "Output",ExpressionUUID->"3c3f5b94-c906-405b-98ee-a7150bd4baa2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67522, 1327, 249, 4, 59, "Subsection",ExpressionUUID->"032d65b6-3ec9-4d6f-8da8-91b5acac9e6c"],
Cell[67774, 1333, 152, 3, 32, "Input",ExpressionUUID->"19ed5da1-212f-42ce-863a-4eee8cb90d17"],
Cell[CellGroupData[{
Cell[67951, 1340, 401, 11, 49, "Subsubsection",ExpressionUUID->"0c456114-00c9-414a-80f4-093268f38890"],
Cell[CellGroupData[{
Cell[68377, 1355, 1284, 39, 62, "Input",ExpressionUUID->"41f78223-7531-4507-b888-bb93af1c1d5d"],
Cell[69664, 1396, 353, 7, 36, "Output",ExpressionUUID->"127059ea-154c-4477-a5f8-8b2395ce66e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70054, 1408, 16941, 440, 740, "Input",ExpressionUUID->"edef5aa7-7e13-4c2a-8af8-4511e1844dc6"],
Cell[86998, 1850, 1090, 15, 36, "Output",ExpressionUUID->"281e498b-8d08-412e-a768-6e2a454ed967"],
Cell[88091, 1867, 20418, 354, 410, "Output",ExpressionUUID->"95967681-3ae3-432b-9ee7-2a805a3c809e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108558, 2227, 426, 12, 49, "Subsubsection",ExpressionUUID->"7a80dd1a-e38b-48d4-bff6-412897fc9fc5"],
Cell[108987, 2241, 177, 3, 32, "Input",ExpressionUUID->"22795421-bffc-400d-896a-64dbcf580818"],
Cell[CellGroupData[{
Cell[109189, 2248, 15942, 413, 661, "Input",ExpressionUUID->"959e71a4-4fd0-499d-b199-d7fe5289bce5"],
Cell[125134, 2663, 749, 10, 36, "Output",ExpressionUUID->"d1c911bf-d21b-4fa7-9ee1-948e5b140561"],
Cell[125886, 2675, 17154, 302, 442, "Output",ExpressionUUID->"79138533-a59a-480c-8c33-3fb875edc08e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143101, 2984, 295, 5, 59, "Subsection",ExpressionUUID->"f57f97dd-e269-411e-aca1-cf4bde17c123"],
Cell[CellGroupData[{
Cell[143421, 2993, 1756, 49, 62, "Input",ExpressionUUID->"5205d183-4487-484f-83de-6e79395a7d3a"],
Cell[145180, 3044, 583, 10, 36, "Output",ExpressionUUID->"05da5490-56b1-4297-bd8f-7a172248e96b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145800, 3059, 434, 12, 49, "Subsubsection",ExpressionUUID->"52089b5f-8241-45e2-935c-d698b2d8b46c"],
Cell[CellGroupData[{
Cell[146259, 3075, 15592, 412, 661, "Input",ExpressionUUID->"c7e9f311-c3e2-4abf-9969-d8cc14f31018"],
Cell[161854, 3489, 488, 6, 36, "Output",ExpressionUUID->"7f36be21-e2a1-42d8-9741-ee31030a8bad"],
Cell[162345, 3497, 48037, 809, 430, "Output",ExpressionUUID->"1717d24b-2d12-497e-a265-ac65e4266cb0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210431, 4312, 432, 12, 49, "Subsubsection",ExpressionUUID->"a7a8373e-d83f-44c2-bb2a-58176e40c5e0"],
Cell[CellGroupData[{
Cell[210888, 4328, 16540, 437, 696, "Input",ExpressionUUID->"f6a90f74-ecc6-4995-96d8-553abd38d2fc"],
Cell[227431, 4767, 722, 9, 36, "Output",ExpressionUUID->"182e6e74-2635-4b99-9f96-b55d7b0566b3"],
Cell[228156, 4778, 720, 9, 36, "Output",ExpressionUUID->"e66ca290-0715-4970-873f-a78754c8ecc1"],
Cell[228879, 4789, 45045, 758, 439, "Output",ExpressionUUID->"c0af6fc3-1444-4600-87b4-0aab5c8a645d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273985, 5554, 169, 3, 59, "Subsection",ExpressionUUID->"7812c1be-64cd-431d-8b86-79d63b4c7561"],
Cell[CellGroupData[{
Cell[274179, 5561, 1358, 41, 62, "Input",ExpressionUUID->"ebcfa68b-cca7-4b7b-8615-b44967b1c25f"],
Cell[275540, 5604, 346, 7, 38, "Output",ExpressionUUID->"db42ab1d-314e-42bf-9f75-df70e56aecc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275923, 5616, 18878, 510, 833, "Input",ExpressionUUID->"4694c911-b168-4dc1-b868-2a6438a0e471"],
Cell[294804, 6128, 714, 10, 36, "Output",ExpressionUUID->"d7e1b6bc-1d74-4f60-bb19-7c3a55d9503d"],
Cell[295521, 6140, 711, 10, 36, "Output",ExpressionUUID->"2bba9272-3145-4c47-8227-096ad6812f45"],
Cell[296235, 6152, 730, 11, 38, "Output",ExpressionUUID->"a7d55699-ebc6-45e3-af29-972ca6d577e3"],
Cell[296968, 6165, 61070, 1023, 389, "Output",ExpressionUUID->"91c6fa4f-1eb1-4506-9688-77266e80e906"]
}, Open  ]]
}, Open  ]]
}
]
*)

